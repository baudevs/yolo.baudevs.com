version: 1.1.0-beta
date: 2025-01-20
changes:
  - type: feature
    id: F001
    name: "Project Initialization"
    description: "Interactive project setup and configuration"
    status: implemented
    components:
      - init
      - core
      - templates
    impact: "Enables easy project creation with standardized structure"

  - type: feature
    id: F002
    name: "Project Visualization"
    description: "3D graph visualization of project relationships"
    status: implemented
    components:
      - graph
      - web
    impact: "Provides intuitive view of project structure"

  - type: feature
    id: F003
    name: "AI Integration"
    description: "Context-aware AI assistance"
    status: implemented
    components:
      - prompt
      - ai
    impact: "Enhances development with AI support"

  - type: feature
    id: F011
    name: "System-wide Keyboard Shortcuts"
    description: "Global access to YOLO commands"
    status: in_progress
    components:
      - shortcuts
      - web
      - macos
    impact: "Improves workflow efficiency"
    blockers:
      - "macOS daemon implementation"
      - "Linux support"
    completion:
      - "‚úÖ Web interface"
      - "‚úÖ Configuration system"
      - "‚úÖ WebSocket updates"
      - "üèóÔ∏è macOS daemon"
      - "üìÖ Linux support"

  - type: feature
    id: F012
    name: "Enhanced AI Integration"
    description: "Multi-provider AI support with configuration management"
    status: implemented
    components:
      - ai
      - config
      - providers
    impact: "Enables flexible AI provider selection and management"
    completion:
      - "‚úÖ OpenAI integration"
      - "‚úÖ Anthropic integration"
      - "‚úÖ Mistral AI support"
      - "‚úÖ Provider configuration"
      - "‚úÖ Testing command"

  - type: feature
    id: F013
    name: "Smart Commit System"
    description: "AI-powered Git commit workflow"
    status: implemented
    components:
      - commit
      - git
      - ai
    impact: "Streamlines Git operations with AI assistance"
    completion:
      - "‚úÖ AI commit message generation"
      - "‚úÖ Automatic staging"
      - "‚úÖ Remote syncing"
      - "‚úÖ Error analysis"

  - type: fix
    id: FIX001
    name: "Project Initialization Reliability"
    description: "Fixed issues with project creation and setup"
    status: implemented
    components:
      - init
      - core
    impact: "Ensures reliable project initialization"

migrations:
  - version: 1.0.0-beta
    date: 2024-01-17
    changes:
      - "Updated project structure"
      - "Enhanced documentation"
      - "Improved error handling"
    rollback:
      - "Revert to previous directory structure"
      - "Restore old documentation format"

  - type: feat
    scope: internal/git
    subject: "add summary of changes functionality"
    body: "feat(internal/git): add summary of changes functionality\n\nAdded the ability to get a summary of changes, including staged changes, unstaged changes, and untracked files. Also implemented a feature to provide a short diff for context, with truncation if too long."

  - type: docs
    scope: internal/commands/commit.go
    subject: "update YOLO documentation"
    body: "docs(internal/commands/commit.go): update YOLO documentation\n\nUpdate YOLO documentation in the project story by creating a new commit with the changes."

  - type: feat
    scope: internal/commands
    subject: "add AI programming question command"
    body: "feat(internal/commands): add AI programming question command\n\nAdded a new 'ask' command that allows users to ask programming questions and get witty responses with 3 simple steps to solve them. The response style changes based on the user's selected personality level (NerdyClean, MildlyRude, or UnhingedFunny)."

  - type: feat
    scope: internal/commands
    subject: "add AI programming question command"
    body: "feat(internal/commands): add AI programming question command\n\nAdded a new 'ask' command that allows users to ask programming questions and get witty responses with 3 simple steps to solve them. The response style changes based on the user's selected personality level (NerdyClean, MildlyRude, or UnhingedFunny)."
